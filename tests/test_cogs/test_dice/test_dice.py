import pytest

from robomania.cogs.dice.grammar import parse


@pytest.mark.parametrize('expression, result', [
    ('1', 1),
    ('1 + 2', 3),
    ('2 * 2', 4),
    ('4 / 2', 2),
    ('5 - 2', 3),
    ('2d6', [5, 6]),
    ('{2d6}', [5, 6]),
    ('{2d6, 3d20}', [[5, 6], [1, 4, 4]]),
    ('{2d6 + 3d20}', [5, 6, 1, 4, 4]),
    ('{2d6 + 3d20}s', 20),
    ('{2d6 + 3d20}k2s', 20),
    ('{2d6 + 3d20}d2s', 0),
    ('{2d6 + 3d20}@2k1s', 37),
    ('{2d6 + 3d20}@2d1s', 37),
    ('{2d6, 3d20}k1s', 11),
    ('{2d6, 3d20}d1s', 11),
    ('{2d6, 3d20}@2k1s', 37),
    ('{2d6, 3d20}@2d1s', 37),
    ('25 + {2d6 + 3d20}', 45),
    ('{25} + {5, 2d6 + 3d20}', [25, 5, [5, 6, 1, 4, 4]]),
    ('{2d6 + 3d20} + k6', [[5, 6, 1, 4, 4], 2]),
    ('2d6 + 3d20 + k6', [5, 6, 1, 4, 4, 2]),
    ('2d6, 3d20', [[5, 6], [1, 4, 4]]),
    (
        '{3d3!, {2d6 + 2d3}d2s, 6 + 2}@2',
        [[[1, 2, 1], 0, 8], [[3, 1, 3, 1, 1], 0, 8]]
    ),
    ('10d5d7k2', [5, 5]),
    ('10d5k7d2', [5, 4, 4, 4, 5]),
    ('{10d5}d7k2', 0),
    ('{10d5}k7d2', 0),
    ('(4d6 + 3d4 - 2) * 2', 52),
    ('6*(4d6)', 96),
    ('4d6kh3', [5, 6, 4]),
    ('10d6!kh3', [6, 6, 5]),
    ('10d6kh3!', [6, 6, 5]),
], ids=(lambda x: str(x)))
def test_roll(expression, result) -> None:
    assert parse(expression).eval().finalize() == result
